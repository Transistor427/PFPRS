[force_move]
enable_force_move: True

[gcode_macro SET_Z_ZERO_POSITION]
gcode:
    {% set bed_center_x = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set bed_center_y = printer.configfile.config.stepper_y.position_max|float / 2 %}
    RESPOND PREFIX="[+]" MSG="Позиция оси Z установлена в 0"
	G90
	SET_KINEMATIC_POSITION X={bed_center_x} Y={bed_center_y} Z=0

[gcode_macro SET_Z_MAX_POSITION]
gcode:
    {% set z_max = printer.toolhead.axis_maximum.z|float %}
    {% set bed_center_x = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set bed_center_y = printer.configfile.config.stepper_y.position_max|float / 2 %}
    RESPOND PREFIX="[+]" MSG="Позиция оси Z установлена в {z_max}"
	G90
	SET_KINEMATIC_POSITION X={bed_center_x} Y={bed_center_y} Z={z_max}
    
[gcode_macro _LOG_Z]
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv                                     
    {% set z_pos = params.Z %}
    SAVE_VARIABLE VARIABLE=pr_z VALUE={z_pos}                                                      # Сохраняем значение переменной z_pos в pr_z
    {% set t_extruder = printer.extruder.target %}                                                 # Устанавливаем значением t_extruder целевую температуру 1-й головы
    SAVE_VARIABLE VARIABLE=pr_t_ext VALUE={t_extruder}                                             # Сохраняем значение переменной t_extruder в pr_t_ext
    {% set t_extruder1 = printer.extruder1.target %}                                               # Устанавливаем значением t_extruder1 целевую температуру 2-й головы
    SAVE_VARIABLE VARIABLE=pr_t_ext1 VALUE={t_extruder1}                                           # Сохраняем значение переменной t_extruder1 в pr_t_ext1
    {% set active_ext = printer.toolhead.extruder %}                                               # Устанавливаем значением active_ext активную голову (extruder или extruder1)
    SAVE_VARIABLE VARIABLE=pr_act_ext VALUE="'{active_ext}'"                                        # Сохраняем значение переменной active_ext в pr_act_ext
    {% set t_bed = printer.heater_bed.target %}                                                    # Устанавливаем значением t_bed целевую температуру стола
    SAVE_VARIABLE VARIABLE=pr_t_bed VALUE={t_bed}                                                  # Сохраняем значение переменной t_bed в pr_t_bed
    {% set last_filepath = printer.virtual_sdcard.file_path %}                                     # Устанавливаем значением last_filepath и присваиваем ей значение название печатаемого файла
    {% if last_filepath != '/home/pi/printer_data/gcodes/restore.gcode' %}                         # Если значение переменной last_filepath не является указанным в условии, то:
        SAVE_VARIABLE VARIABLE=pr_file VALUE="'{last_filepath}'"                                   # Сохраняем значение переменной last_filepath в pr_file
    {% endif %}
    {% if printer['heater_generic chamber'] and (printer['heater_generic chamber'].target > 0) %}  # Если существует нагреватель камеры (для HT) и целевая температура больше 0 (т.е. камера используется), то:
        {% set t_chamb = printer['heater_generic chamber'].target %}                               # Устанавливаем значением t_chamb и присваиваем ей значение текущей температуры камеры
        SAVE_VARIABLE VARIABLE=pr_t_chamb VALUE={t_chamb}                                          # Сохраняем значение переменной t_chamb в pr_t_chamb
    {% endif %}
    {% if printer['heater_generic Chamber'] and (printer['heater_generic Chamber'].target > 0) %}    # Если существует нагреватель камеры (для HT) и целевая температура больше 0 (т.е. камера используется), то:
        {% set t_chamb = printer['heater_generic chamber'].target %}                               # Устанавливаем значением t_chamb и присваиваем ей значение текущей температуры камеры
        SAVE_VARIABLE VARIABLE=pr_t_chamb VALUE={t_chamb}                                          # Сохраняем значение переменной t_chamb в pr_t_chamb
    {% endif %}

[gcode_macro _START_PRINT_RESTORE]
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set Z_MAX = printer.toolhead.axis_maximum.z|float %}
    {% set Z_POS = svv.pr_z %}                                                                     # Устанавливаем значением Z_POS из файла переменных pr_z
    {% set T_BED = svv.pr_t_bed|float %}                                                           # Устанавливаем значением T_BED
    {% set T_EXTRUDER = svv.pr_t_ext|float %}                                                      # Устанавливаем значением T_EXTRUDER
    {% set T_EXTRUDER1 = svv.pr_t_ext1|float %}                                                    # Устанавливаем значением T_EXTRUDER1
    {% set T_CHAMBER = svv.target_chamb|default(0)|float %}                                        # Устанавливаем значением T_CHAMBER
    {% set ACTIVE_EXT_PRINT = svv.pr_act_ext|string %}                                                   # Устанавливаем значением ACTIVE_EXT
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True                                              # Устанавливаем значение переменной was_interrupted на True
    RESPOND PREFIX="[+]" MSG="Установлена высота по оси Z - {Z_POS}"
    SET_KINEMATIC_POSITION Z={Z_POS}                                                               # Устанавливаем позицию по оси Z - Z_POS
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Запуск печати файла восстановления"
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Включен нагрев стола до {T_BED}"  
    M140 S{T_BED}                                                                                  # Установка целевой температуры стола до записанной в память температуры
    RESPOND PREFIX="[+]" MSG="Проверяем температуру хотенда"
    {% if ACTIVE_EXT_PRINT == "extruder" %}
        {% if T_EXTRUDER > 150 %}
            {% if printer.extruder.temperature > 200 %}                                                    # Если текущая температура хотенда меньше 200 градусов, то:
                RESPOND PREFIX="[+]" MSG="Температура 1-й головы больше 200 градусов. Парковка осей XY разрешена"
                M104 T0 S{T_EXTRUDER}  
                G91                                                                                        # Включаем использование относительных координат 
                G1 Z5                                                                                      # Опускаем стол на 5мм вниз
                G90                                                                                        # Включаем использование абсолютных координат 
                G28                                                                                      # Паркуем ось X
                SET_KINEMATIC_POSITION Z={Z_POS + 5}
                T0
            {% else %}
                G4 P2000
                RESPOND PREFIX="[+]" MSG="Температура 1-й головы меньше 200 градусов. Включен нагрев хотенда"  
                M104 T0 S200                                                                                  # Установка целевой температуры хотенда до 200 градусов
                TEMPERATURE_WAIT SENSOR=extruder MINIMUM=200                                               # Ожидание нагрева хотенда до 200 градусов
                G91                                                                                        # Включаем использование относительных координат 
                G1 Z5                                                                                      # Опускаем стол на 5мм вниз
                G90                                                                                        # Включаем использование абсолютных координат 
                G28                                                                                      # Паркуем ось X
                SET_KINEMATIC_POSITION Z={Z_POS + 5}
                T0 
            {% endif %}
            G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
            RESPOND PREFIX="[+]" MSG="Включен нагрев 1-й головы до {T_EXTRUDER}" 
            M104 T0 S{T_EXTRUDER}                                                                          # Установка целевой температуры хотенда до записанной в память температуры
            M109 T0 S{T_EXTRUDER}
        {% else %}
            { action_raise_error("Ошибка! Активирована 1-я голова, но она не использовалась в печати") }
        {% endif %}
    {% else %}
        {% if T_EXTRUDER1 > 150 %}
            {% if printer.extruder1.temperature > 200 %}                                                   # Если текущая температура хотенда меньше 200 градусов, то:
                RESPOND PREFIX="[+]" MSG="Температура 2-й головы больше 200 градусов. Парковка осей XY разрешена"
                M104 T1 S{T_EXTRUDER1}  
                G91                                                                                        # Включаем использование относительных координат 
                G1 Z5                                                                                      # Опускаем стол на 5мм вниз
                G90                                                                                        # Включаем использование абсолютных координат 
                ACTIVATE_EXTRUDER EXTRUDER=extruder1
                G28                                                                                        # Паркуем ось X
                SET_KINEMATIC_POSITION Z={Z_POS + 5}
                T1
            {% else %}
                G4 P2000
                RESPOND PREFIX="[+]" MSG="Температура 2-й головы меньше 200 градусов. Включен нагрев хотенда"  
                M104 T1 S200                                                                               # Установка целевой температуры хотенда до 200 градусов
                TEMPERATURE_WAIT SENSOR=extruder1 MINIMUM=200                                              # Ожидание нагрева хотенда до 200 градусов
                G91                                                                                        # Включаем использование относительных координат 
                G1 Z5                                                                                      # Опускаем стол на 5мм вниз
                G90                                                                                        # Включаем использование абсолютных координат 
                ACTIVATE_EXTRUDER EXTRUDER=extruder1
                G28                                                                                        # Паркуем ось Y
                SET_KINEMATIC_POSITION Z={Z_POS + 5} 
                T1
            {% endif %}
            G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
            RESPOND PREFIX="[+]" MSG="Включен нагрев 2-й головы до {T_EXTRUDER1}" 
            M104 T1 S{T_EXTRUDER1}                                                                             # Установка целевой температуры хотенда до записанной в память температуры
            M109 T1 S{T_EXTRUDER1}                                                                             # Ожидание нагрева хотенда до записанной в память температуры
        {% else %}
            { action_raise_error("Ошибка! Активирована 2-я голова, но она не использовалась в печати") }
        {% endif %}
    {% endif %}

    {% if T_CHAMBER > 0 %}                                                                         # Проверяем, если записанная в память температура камеры больше 0, то:
        RESPOND PREFIX="[+]" MSG="Включен нагрев камеры до {T_CHAMBER}"
        SET_HEATER_TEMPERATURE HEATER=chamber TARGET={T_CHAMBER}                                   # Установка целевой температуры камеры до записанной в память температуры
    {% endif %}
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Ожидаение нагрева стола до {T_BED}"
    M190 S{T_BED}                                                                                  # Ожидание нагрева стола до записанной в память температуры
    RESPOND PREFIX="[+]" MSG="Нагрев всех нагревателей завершен"
    G91                                                                                            # Переключаемся на относительные координаты
    G1 Z-5                                                                               # Поднимаем стол на 5 мм вверх
    G90                                                                                            # Переключаемся на абсолютные координаты
    G21                                                                                            # Единицы измерения - мм
    M83                                                                                            # Переключаемся на относительные координаты для экструдера
    G1 E20 F2100                                                                                   # Экструдируем немного филамента
    RESPOND PREFIX="[+]" MSG="Начало печати"

[gcode_shell_command POWER_LOSS_RESUME_CURR]
command: sh /home/pi/PFPRS/curr_layer.sh
timeout: 5
verbose: False

[gcode_shell_command POWER_LOSS_RESUME_NEXT]
command: sh /home/pi/PFPRS/next_layer.sh
timeout: 5
verbose: False

[gcode_macro _RESUME_INTERRUPTED_CURR]
description: Продолжить печать с текущего слоя последнего запущенного файла.
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set z_height = params.Z_HEIGHT|default(svv.pr_z) %}                                   # Устанавливаем значением z_height параметр Z_HEIGHT. Если не указано, то берем из файла переменных pr_z
    {% set last_file = params.GCODE_FILE|default(svv.pr_file)|string %}                            # Устанавливаем значением last_file параметр GCODE_FILE. Если не указано, то берем из файла переменных pr_file
    {% if last_file != 'None' %}                                                                   # Если значение переменной last_file не пустое, то:
        _PROMPT_END                                                                                # Закрываем все открытые окна
        RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_CURR PARAMS="{z_height} {last_file}"               # Запускаем gcode_shell_command обработки файла текущего слоя с параметрами записанной высоты и названием печатаемого файла
        SDCARD_PRINT_FILE FILENAME=restore.gcode                                                   # Запускаем обработанный файл restore.gcode на печать
    {% else %}                                                                                     # Иначе, если название файла отсутствует (None), то:
        RESPOND TYPE=error MSG="Файл для восстановления не найден!"
        _PROMPT_END                                                                                # Закрываем все открытые окна
    {% endif %}

[gcode_macro _RESUME_INTERRUPTED_NEXT]
description: Продолжить печать со следующего слоя последнего запущенного файла.
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set z_height = params.Z_HEIGHT|default(svv.pr_z) %}                                   # Устанавливаем значением z_height параметр Z_HEIGHT. Если не указано, то берем из файла переменных pr_z 
    {% set last_file = params.GCODE_FILE|default(svv.pr_file)|string %}                            # Устанавливаем значением last_file параметр GCODE_FILE. Если не указано, то берем из файла переменных pr_file 
    {% if last_file != 'None' %}                                                                   # Если значение переменной last_file не пустое, то:
        _PROMPT_END                                                                                # Закрываем все открытые окна
        RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_NEXT PARAMS="{z_height} {last_file}"               # Запускаем gcode_shell_command обработки файла следующего слоя с параметрами записанной высоты и названием печатаемого файла 
        SDCARD_PRINT_FILE FILENAME=restore.gcode                                                   # Запускаем обработанный файл restore.gcode на печать
    {% else %}                                                                                     # Иначе, если название файла отсутствует (None), то:
        RESPOND TYPE=error MSG="Файл для восстановления не найден!"
        _PROMPT_END                                                                                # Закрываем все открытые окна
    {% endif %}

[gcode_macro _PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro SHOW_RESUME_INTERRUPTED]
description: Возобновление последней печати в случае аварийной остановки или кратковременного отключения питания.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if svv.was_interrupted%}
        RESPOND TYPE=command MSG="action:prompt_begin Обнаружена прерванная печать"
        RESPOND TYPE=command MSG="action:prompt_text Печать была прервана. Продолжить последнюю печать? *Убедитесь, что деталь не отлипла! Если стол опустился вниз, то воспользуйтесь инструкцией по ручному восстановлению положения оси Z!"
        RESPOND TYPE=command MSG="action:prompt_footer_button Возобновить|_SELECT_LAYER|primary"
        RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        RESPOND TYPE=error MSG="Последняя печать завершилась без ошибок и ее невозможно восстановить!"
    {% endif %}

[gcode_macro _SELECT_LAYER]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Возобновление печати"
    RESPOND TYPE=command MSG="action:prompt_text С какого слоя возобновить печать? *Если принтер только начал печатать слой, то выберите 'Текущий'. В ином случае 'Следующий'!"
    RESPOND TYPE=command MSG="action:prompt_footer_button Текущий|_RESUME_INTERRUPTED_CURR"
    RESPOND TYPE=command MSG="action:prompt_footer_button Следующий|_RESUME_INTERRUPTED_NEXT"
    RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro _BEFORE_LAYER_CHANGE]
gcode:

[gcode_macro _AFTER_LAYER_CHANGE]
gcode:
    {% set Z = params.Z %}
    _LOG_Z Z={Z}

[gcode_macro CHANGE_EMERGENCY_HOMING]
description: Перед использованием изучите руководство пользователя!!! При нажатии режим парковки изменяется с обычного на аварийный и наоборот.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if not svv.emergency_homing %}
      RESPOND PREFIX="[!]" MSG="Режим парковки переведен в аварийный! Внимательно следите за поведением принтера!"
      SAVE_VARIABLE VARIABLE=emergency_homing VALUE=True
    {% else %}
      RESPOND PREFIX="[+]" MSG="Режим парковки переведен в обычный."
      SAVE_VARIABLE VARIABLE=emergency_homing VALUE=False
    {% endif %}
