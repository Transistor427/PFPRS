[save_variables]
filename:  ~/printer_data/config/variables.cfg

[pfprs]
debug_mode: True                     # Enable detailed logging (default: False)

# Movement speed for Z operations
slow_homing_speed: 1.0                # Speed for Z moves (mm/s)

extruders: extruder, extruder1        # List of extruders to track

# Chamber temperature support
chamber_heater: chamber               # Name of chamber heater (if available)

# Part Cooling Fan Status
part_cooling_fans: fan                # Part cooling fan to monitor

# PRINT STATE MANAGEMENT OPTIONS
save_interval: 30                     # Time between saves in seconds (0-300, default: 30)
save_on_layer: True                   # Whether to save on layer changes (default: True)
history_size: 3                       # Number of states to keep in history (2-20, default: 5)
save_delay: 2                         # States to delay before saving (1-4, default: 2)
 
# RECOVERY GCODE OPTIONS
restart_gcode: _PLR_RESUME_PRINT_START   # G-code to add into the modified file to set the printer up correctly to resume printing.

# Pre/Post operation G-code
before_resume_gcode:  _PLR_BEFORE_RESUME_GCODE   # G-code to run before resume operations
after_resume_gcode:                # G-code to run after resume operations    
before_calibrate_gcode:            # G-code to run before calibration
after_calibrate_gcode:             # G-code to run after calibration

[gcode_macro _PLR_RESUME_PRINT_START]
  gcode:
      {% set resume_info = printer.save_variables.variables.resume_meta_info %}
      _PLR_RESUME_READY      
      PLR_Z_HOME MODE=RESUME
      PLR_ENABLE
      G90             ; absolute positioning
      M107            ; turn fan off
      G92 E0                         ; zero the extruder
      G1 E5.0 F1800                 ; retract filament
      G1 X{resume_info.position.x} Y{resume_info.position.y} Z{resume_info.position.z} F3000
      G92 E0
      G90
      G21
      M83 ; use relative distances for extrusion
      RESTORE_FAN_SPEEDS

[gcode_macro _PLR_RESUME_READY]
  gcode:
    {% set resume_info = printer.save_variables.variables.resume_meta_info %}
    {% set bed_center_x = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set bed_center_y = printer.configfile.config.stepper_y.position_max|float / 2 %}
    
    M140 S{resume_info.bed_temp} # start heating the bed to the temp it was before the failure.
    M109 S{resume_info.hotend_temp} # wait for the toolhead to reach the temp it was printing on before failure
    SET_KINEMATIC_POSITION X={bed_center_x} Y={bed_center_y} Z=0 
    G91
    G1 Z5 F1200 #Clear the print by raising the toolhead
    G90
   
[gcode_macro _PLR_BEFORE_RESUME_GCODE]
  gcode:
      {% set bed_center_x = printer.configfile.config.stepper_x.position_max|float / 2 %}
      {% set bed_center_y = printer.configfile.config.stepper_y.position_max|float / 2 %}
      
      G28 X
      G28 Y
      
      G1 X{bed_center_x} Y{bed_center_y} F2000
      SET_KINEMATIC_POSITION Z=0 

[gcode_macro RESTORE_FAN_SPEEDS]
  description: Restore fan speeds from saved state in resume_meta_info
  gcode:
      {% set svv = printer.save_variables.variables %}
      {% if 'resume_meta_info' not in svv %}
          { action_respond_info("No saved state found in variables") }
      {% else %}
          {% set state = svv.resume_meta_info %}
          {% if 'fan_speeds' not in state %}
              { action_respond_info("No fan speed data found in saved state") }
          {% else %}
              {% set fan_speeds = state.fan_speeds %}
              {% set cur_extruder = printer.toolhead.extruder %}
              
              # Loop through all saved fan speeds
              {% for fan_name, speed in fan_speeds.items() %}
                  {% if fan_name == 'fan' or fan_name == cur_extruder + '_fan' %}
                      # This is a parts cooling fan for current extruder - use M106
                      {% set speed_byte = (speed * 255.0 + 0.5)|int %}
                      M106 P0 S{speed_byte} ; Set parts cooling fan
                      { action_respond_info("Setting parts cooling fan %s using M106: S%d (%.1f%%)" % (fan_name, speed_byte, speed * 100.0)) }
                  {% else %}
                      # Check if this is a valid generic fan
                      {% if fan_name in printer %}
                          SET_FAN_SPEED FAN={fan_name} SPEED={speed}
                          { action_respond_info("Setting generic fan %s using SET_FAN_SPEED: %.1f%%" % (fan_name, speed * 100.0)) }
                      {% else %}
                          { action_respond_info("Warning: Fan %s not found - skipping" % fan_name) }
                      {% endif %}
                  {% endif %}
              {% endfor %}
          {% endif %}
      {% endif %}

[gcode_macro _PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro SHOW_RESUME_INTERRUPTED]
description: Возобновление последней печати в случае аварийной остановки или кратковременного отключения питания.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if svv.was_interrupted%}
        RESPOND TYPE=command MSG="action:prompt_begin Обнаружена прерванная печать"
        RESPOND TYPE=command MSG="action:prompt_text Печать была прервана. Продолжить последнюю печать? *Убедитесь, что деталь не отлипла! Если стол опустился вниз, то воспользуйтесь инструкцией по ручному восстановлению положения оси Z!"
        RESPOND TYPE=command MSG="action:prompt_footer_button Возобновить|_SELECT_LAYER|primary"
        RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        RESPOND TYPE=error MSG="Последняя печать завершилась без ошибок и ее невозможно восстановить!"
    {% endif %}

[gcode_macro _SELECT_LAYER]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Возобновление печати"
    RESPOND TYPE=command MSG="action:prompt_text С какого слоя возобновить печать? *Если принтер только начал печатать слой, то выберите 'Текущий'. В ином случае 'Следующий'!"
    RESPOND TYPE=command MSG="action:prompt_footer_button Текущий|_RESUME_INTERRUPTED_CURR"
    RESPOND TYPE=command MSG="action:prompt_footer_button Следующий|_RESUME_INTERRUPTED_NEXT"
    RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
    RESPOND TYPE=command MSG="action:prompt_show"
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
