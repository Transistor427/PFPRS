[force_move]
enable_force_move: True

[gcode_shell_command POWER_LOSS_RESUME_CURR]
command: ~/printer_data/config/klipper-config/pfprs/curr_layer.sh
timeout: 5
verbose: True

[gcode_shell_command POWER_LOSS_RESUME_NEXT]
command: ~/printer_data/config/klipper-config/pfprs/next_layer.sh
timeout: 5
verbose: True

[gcode_macro _RESUME_INTERRUPTED_CURR]
description: Продолжить печать с текущего слоя последнего запущенного файла.
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set z_height = params.Z_HEIGHT|default(svv.pr_z)|float %}                                   # Устанавливаем значением z_height параметр Z_HEIGHT. Если не указано, то берем из файла переменных pr_z
    {% set last_file = params.GCODE_FILE|default(svv.pr_file)|string %}                            # Устанавливаем значением last_file параметр GCODE_FILE. Если не указано, то берем из файла переменных pr_file
    {% if last_file != 'None' %}                                                                   # Если значение переменной last_file не пустое, то:
        _PROMPT_END                                                                                # Закрываем все открытые окна
        RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_CURR PARAMS="{z_height} {last_file}"               # Запускаем gcode_shell_command обработки файла текущего слоя с параметрами записанной высоты и названием печатаемого файла
        SDCARD_PRINT_FILE FILENAME=restore.gcode                                                   # Запускаем обработанный файл restore.gcode на печать
    {% else %}                                                                                     # Иначе, если название файла отсутствует (None), то:
        RESPOND TYPE=error MSG="Файл для восстановления не найден!"
        _PROMPT_END                                                                                # Закрываем все открытые окна
    {% endif %}

[gcode_macro _RESUME_INTERRUPTED_NEXT]
description: Продолжить печать со следующего слоя последнего запущенного файла.
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set z_height = params.Z_HEIGHT|default(svv.pr_z)|float %}                                   # Устанавливаем значением z_height параметр Z_HEIGHT. Если не указано, то берем из файла переменных pr_z 
    {% set last_file = params.GCODE_FILE|default(svv.pr_file)|string %}                            # Устанавливаем значением last_file параметр GCODE_FILE. Если не указано, то берем из файла переменных pr_file 
    {% if last_file != 'None' %}                                                                   # Если значение переменной last_file не пустое, то:
        _PROMPT_END                                                                                # Закрываем все открытые окна
        RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME_NEXT PARAMS="{z_height} {last_file}"               # Запускаем gcode_shell_command обработки файла следующего слоя с параметрами записанной высоты и названием печатаемого файла 
        SDCARD_PRINT_FILE FILENAME=restore.gcode                                                   # Запускаем обработанный файл restore.gcode на печать
    {% else %}                                                                                     # Иначе, если название файла отсутствует (None), то:
        RESPOND TYPE=error MSG="Файл для восстановления не найден!"
        _PROMPT_END                                                                                # Закрываем все открытые окна
    {% endif %}

[gcode_macro _LOG_Z]
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set z_pos = printer.gcode_move.gcode_position.z %}                                          # Устанавливаем значением z_pos текущую позицию по Z
    SAVE_VARIABLE VARIABLE=pr_z VALUE={z_pos}                                                      # Сохраняем значение переменной z_pos в pr_z
    {% set t_extruder = printer.extruder.target %}                                                 # Устанавливаем значением t_extruder целевую температуру 1-й головы
    SAVE_VARIABLE VARIABLE=pr_t_ext VALUE={t_extruder}                                             # Сохраняем значение переменной t_extruder в pr_t_ext
	{% if printer.extruder1 and printer.extruder1.target > 0 %}                                    # Если существует 2-я голова (для Dual) и целевая температура 2-й головы больше 0 (т.е. голова используется), то:
        {% set t_extruder1 = printer.extruder1.target %}                                           # Устанавливаем значением t_extruder1 целевую температуру 2-й головы
        SAVE_VARIABLE VARIABLE=pr_t_ext1 VALUE={t_extruder1}                                       # Сохраняем значение переменной t_extruder1 в pr_t_ext1
        {% set active_ext = printer.toolhead.extruder %}                                           # Устанавливаем значением active_ext активную голову (extruder или extruder1)
        SAVE_VARIABLE VARIABLE=pr_act_ext VALUE={active_ext}                                       # Сохраняем значение переменной active_ext в pr_act_ext
    {% endif %}
    {% set t_bed = printer.heater_bed.target %}                                                    # Устанавливаем значением t_bed целевую температуру стола
    SAVE_VARIABLE VARIABLE=pr_t_bed VALUE={t_bed}                                                  # Сохраняем значение переменной t_bed в pr_t_bed
    {% set z_pos = printer.gcode_move.gcode_position.z %}
    {% set last_filepath = printer.virtual_sdcard.file_path %}                                     # Устанавливаем значением last_filepath и присваиваем ей значение название печатаемого файла
    {% if last_filepath != '/home/pi/printer_data/gcodes/restore.gcode' %}                         # Если значение переменной last_filepath не является указанным в условии, то:
        SAVE_VARIABLE VARIABLE=pr_file VALUE="'{last_filepath}'"                                   # Сохраняем значение переменной last_filepath в pr_file
    {% endif %}
    {% if printer['heater_generic chamber'] and printer['heater_generic chamber'].target > 0 %}    # Если существует нагреватель камеры (для HT) и целевая температура больше 0 (т.е. камера используется), то:
        {% set t_chamb = printer['heater_generic chamber'].target %}                               # Устанавливаем значением t_chamb и присваиваем ей значение текущей температуры камеры
        SAVE_VARIABLE VARIABLE=pr_t_chamb VALUE={t_chamb}                                          # Сохраняем значение переменной t_chamb в pr_t_chamb
    {% endif %}

[gcode_macro _START_PRINT_RESTORE]
gcode:
    {% set svv = printer.save_variables.variables %}                                               # Сокращаем обращение к сохраненным в память переменным до svv
    {% set Z_POS = svv.pr_z|float %}                                                               # Устанавливаем значением Z_POS из файла переменных pr_z
    {% set T_BED = svv.pr_t_bed|default(90)|float %}                                               # Устанавливаем значением T_BED
    {% set T_EXTRUDER = svv.pr_t_ext|default(240)|float %}                                         # Устанавливаем значением T_EXTRUDER
    {% set T_EXTRUDER1 = svv.pr_t_ext1|default(240)|float %}                                       # Устанавливаем значением T_EXTRUDER1
    {% set ACTIVE_EXT = svv.pr_act_ext|string %}                                                   # Устанавливаем значением ACTIVE_EXT
    {% set T_CHAMBER = svv.target_chamb|default(0)|float %}                                        # Устанавливаем значением T_CHAMBER
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True                                              # Устанавливаем значение переменной was_interrupted на True
    RESPOND PREFIX="[+]" MSG="Установлена высота по оси Z - {Z_POS}"
    SET_KINEMATIC_POSITION Z={Z_POS}                                                               # Устанавливаем позицию по оси Z - Z_POS
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Запуск печати файла восстановления" 
    {% if printer.extruder1 %}                                                                     # Проверяем, что 2-я голова сущетсвует
        {% if ACTIVE_EXT == extruder and printer.extruder.temperature >= 190 %}                    # Если активная первая голова и её температура больше либо равна 190, то
            G28 X                                                                                  # Паркуем ось X
            G28 Y                                                                                  # Паркуем ось Y
        {% endif %}
        {% if ACTIVE_EXT == extruder1 and printer.extruder1.temperature >= 190 %}                  # Устанавливаем значением z_pos текущую позицию по Z
            G28 X                                                                                  # Паркуем ось X
            G28 Y                                                                                  # Паркуем ось Y
        {% endif %}
    {% else %}
        {% if printer.extruder.temperature >= 190 %}                                               # Устанавливаем значением z_pos текущую позицию по Z
            G28 X                                                                                  # Паркуем ось X
            G28 Y                                                                                  # Паркуем ось Y
        {% endif %}
    {% endif %}
    {% if T_CHAMBER > 0 %}                                                                         # Проверяем, если записанная в память температура камеры больше 0, то:
        RESPOND PREFIX="[+]" MSG="Включен нагрев камеры до рабочей температуры"
        SET_HEATER_TEMPERATURE HEATER=chamber TARGET={T_CHAMBER}                                   # Установка целевой температуры камеры до записанной в память температуры
    {% endif %}
    {% if printer.extruder1 %}                                                                     # Если 2-я голова сущетсвует (для Dual), то: 
        RESPOND PREFIX="[+]" MSG="Включен нагрев первой головы до {T_EXTRUDER}" 
        M104 T0 S{T_EXTRUDER}                                                                      # Установка целевой температуры 1-й головы до записанной в память температуры
        M109 T0 S{T_EXTRUDER}                                                                      # Ожидание нагрева 2-й головы до записанной в память температуры
        G4 P2000                                                                                   # Задержка 2 секунды для отображения сообщений
        {% if T_EXTRUDER1 > 100 %}                                                                 # Если температура 2-й головы больше 100 (если 2-я голова использовалась при печати), то:
            RESPOND PREFIX="[+]" MSG="Включен нагрев второй головы до {T_EXTRUDER1}" 
            M104 T1 S{T_EXTRUDER1}                                                                 # Установка целевой температуры 2-й головы до записанной в память температуры
            M109 T1 S{T_EXTRUDER1}                                                                 # Ожидание нагрева 2-й головы до записанной в память температуры  
            G4 P2000                                                                               # Задержка 2 секунды для отображения сообщений
        {% endif %}
    {% else %}                                                                                     # Иначе, если одноголовый принтер, то:
        RESPOND PREFIX="[+]" MSG="Включен нагрев хотенда до {T_EXTRUDER}" 
        M104 S{T_EXTRUDER}                                                                         # Установка целевой температуры хотенда до записанной в память температуры
        M109 S{T_EXTRUDER}                                                                         # Ожидание нагрева хотенда до записанной в память температуры
        G4 P2000                                                                                   # Задержка 2 секунды для отображения сообщений
    {% endif %}
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Включен нагрев стола до {T_BED}"  
    M140 S{T_BED}                                                                                  # Установка целевой температуры стола до записанной в память температуры
    M190 S{T_BED}                                                                                  # Ожидание нагрева стола до записанной в память температуры
    RESPOND PREFIX="[+]" MSG="Нагрев завершен"
    G4 P2000                                                                                       # Задержка 2 секунды для отображения сообщений
    RESPOND PREFIX="[+]" MSG="Продолжаем печать"  
    G91                                                                                            # Переключаемся на относительные координаты
    G1 Z5                                                                                          # Опускаем стол на 5 мм вниз
    G90                                                                                            # Переключаемся на абсолютные координаты
    {% if "xy" not in printer.toolhead.homed_axes %}                                               # Если оси XY не были запаркованы, то:
        G28 X                                                                                      # Паркуем ось X
        G28 Y                                                                                      # Паркуем ось Y
    {% endif %}
    G91                                                                                            # Переключаемся на относительные координаты
    G1 Z-5                                                                                         # Поднимаем стол на 5 мм вверх
    G90                                                                                            # Переключаемся на абсолютные координаты
    G21                                                                                            # Единицы измерения - мм
    M83                                                                                            # Переключаемся на относительные координаты для экструдера
    {% if printer.extruder1 %}                                                                     # Если 2-й голова сущетсвует, то:
        {% if ACTIVE_EXT == extruder1 %}                                                           # Если 2-й голова была активной, то:
            T1                                                                                     # Берем 2-ю голову
        {% else %}
            T0                                                                                     # Берем 1-ю голову
        {% endif %}
    {% endif %}
    G1 E20 F2100                                                                                   # Экструдируем немного филамента
    RESPOND PREFIX="[+]" MSG="Начало печати" 

[delayed_gcode _DELAY_SHOW_RESUME_INTERRUPTED]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if svv.was_interrupted%}
        SHOW_RESUME_INTERRUPTED
    {% endif %}
initial_duration: 25.0

[gcode_macro _PROMPT_END]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end"

[gcode_macro SHOW_RESUME_INTERRUPTED]
description: Возобновление последней печати в случае аварийной остановки или кратковременного отключения питания.
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if svv.was_interrupted%}
        RESPOND TYPE=command MSG="action:prompt_begin Обнаружена прерванная печать"
        RESPOND TYPE=command MSG="action:prompt_text Печать была прервана. Продолжить последнюю печать? *Убедитесь, что стол не сместился и деталь не отлипла! Если стол опустился вниз, то рекомендуется запустить печать заново!"
        RESPOND TYPE=command MSG="action:prompt_footer_button Возобновить|_SELECT_LAYER|primary"
        RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
        RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
        RESPOND TYPE=error MSG="Отсутствует файл для возобновления! Сначала необходимо запустить печать!"
    {% endif %}

[gcode_macro _SELECT_LAYER]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Возобновление печати"
    RESPOND TYPE=command MSG="action:prompt_text С какого слоя возобновить печать? *Если принтер только начал печатать слой, то выберите 'Текущий'. В ином случае 'Следующий'!"
    RESPOND TYPE=command MSG="action:prompt_footer_button Текущий|_RESUME_INTERRUPTED_CURR"
    RESPOND TYPE=command MSG="action:prompt_footer_button Следующий|_RESUME_INTERRUPTED_NEXT"
    RESPOND TYPE=command MSG="action:prompt_footer_button Отмена|_PROMPT_END|warning"
    RESPOND TYPE=command MSG="action:prompt_show"
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
